diff --git a/crypto/drbg.c b/crypto/drbg.c
index 54cfd4820abc..56fbb8b192b0 100644
--- a/crypto/drbg.c
+++ b/crypto/drbg.c
@@ -99,6 +99,10 @@
 
 #include <crypto/drbg.h>
 
+#ifdef CONFIG_CRYPTO_FIPS
+#include "internal.h" //For FIPS_FUNC_TEST macros
+#endif
+
 /***************************************************************
  * Backend cipher definitions available to DRBG
  ***************************************************************/
@@ -256,7 +260,22 @@ static bool drbg_fips_continuous_test(struct drbg_state *drbg,
 		/* return false due to priming, i.e. another round is needed */
 		return false;
 	}
+
+#if FIPS_FUNC_TEST == 94
+	printk(KERN_ERR "FIPS : drbg.c:drbg_fips_continuous_test Intentionally failing drbg_fips_continuous_test!!!\n");
+	memcpy(drbg->prev, buf, drbg_blocklen(drbg));
+#endif
+
 	ret = memcmp(drbg->prev, buf, drbg_blocklen(drbg));
+
+        if (ret == 0 ) {
+	    printk(KERN_ERR "FIPS : drbg.c:drbg_fips_continuous_test failed !!!\n");
+	    set_in_fips_err();
+            if (in_fips_err())
+                printk(KERN_ERR "FIPS : drbg.c:drbg_fips_continuous_test FIPS in Error!!!\n");
+            return false;
+        }
+
 	memcpy(drbg->prev, buf, drbg_blocklen(drbg));
 	/* the test shall pass when the two compared values are not equal */
 	return ret != 0;
@@ -619,6 +638,13 @@ static int drbg_ctr_generate(struct drbg_state *drbg,
 	struct drbg_string data;
 	unsigned char prefix = DRBG_PREFIX1;
 
+#ifdef CONFIG_CRYPTO_FIPS
+        if (unlikely(in_fips_err())) {
+                printk(KERN_ERR "FIPS : drbg.c:drbg_ctr_generate FIPS in Error!!!\n");
+                return -EACCES;
+        }
+#endif
+
 	memset(drbg->scratchpad, 0, drbg_blocklen(drbg));
 
 	/* 10.2.1.5.2 step 2 */
@@ -642,6 +668,13 @@ static int drbg_ctr_generate(struct drbg_state *drbg,
 		outlen = (drbg_blocklen(drbg) < (buflen - len)) ?
 			  drbg_blocklen(drbg) : (buflen - len);
 		if (!drbg_fips_continuous_test(drbg, drbg->scratchpad)) {
+#ifdef CONFIG_CRYPTO_FIPS
+                        if (unlikely(in_fips_err())) {
+                                printk(KERN_ERR "FIPS : drbg.c:drbg_ctr_generate FIPS in Error!!!\n");
+                                len = -EACCES;
+                                goto out;
+                        }
+#endif
 			/* 10.2.1.5.2 step 6 */
 			drbg_add_buf(drbg->V, drbg_blocklen(drbg), &prefix, 1);
 			continue;
@@ -745,6 +778,13 @@ static int drbg_hmac_generate(struct drbg_state *drbg,
 	struct drbg_string data;
 	LIST_HEAD(datalist);
 
+#ifdef CONFIG_CRYPTO_FIPS
+        if (unlikely(in_fips_err())) {
+                printk(KERN_ERR "FIPS : drbg.c:drbg_hmac_generate FIPS in Error!!!\n");
+                return -EACCES;
+        }
+#endif
+
 	/* 10.1.2.5 step 2 */
 	if (addtl && !list_empty(addtl)) {
 		ret = drbg_hmac_update(drbg, addtl, 1);
@@ -762,8 +802,15 @@ static int drbg_hmac_generate(struct drbg_state *drbg,
 			return ret;
 		outlen = (drbg_blocklen(drbg) < (buflen - len)) ?
 			  drbg_blocklen(drbg) : (buflen - len);
-		if (!drbg_fips_continuous_test(drbg, drbg->V))
+		if (!drbg_fips_continuous_test(drbg, drbg->V)) {
+#ifdef CONFIG_CRYPTO_FIPS
+                        if (unlikely(in_fips_err())) {
+                                printk(KERN_ERR "FIPS : drbg.c:drbg_hmac_generate FIPS in Error!!!\n");
+                                return -EACCES;
+                        }
+#endif
 			continue;
+                }
 
 		/* 10.1.2.5 step 4.2 */
 		memcpy(buf + len, drbg->V, outlen);
@@ -944,6 +991,13 @@ static int drbg_hash_hashgen(struct drbg_state *drbg,
 	LIST_HEAD(datalist);
 	unsigned char prefix = DRBG_PREFIX1;
 
+#ifdef CONFIG_CRYPTO_FIPS
+        if (unlikely(in_fips_err())) {
+                printk(KERN_ERR "FIPS : drbg.c:drbg_hash_hashgen FIPS in Error!!!\n");
+                return -EACCES;
+        }
+#endif
+
 	memset(src, 0, drbg_statelen(drbg));
 	memset(dst, 0, drbg_blocklen(drbg));
 
@@ -963,6 +1017,13 @@ static int drbg_hash_hashgen(struct drbg_state *drbg,
 		outlen = (drbg_blocklen(drbg) < (buflen - len)) ?
 			  drbg_blocklen(drbg) : (buflen - len);
 		if (!drbg_fips_continuous_test(drbg, dst)) {
+#ifdef CONFIG_CRYPTO_FIPS
+                        if (unlikely(in_fips_err())) {
+                                printk(KERN_ERR "FIPS : drbg.c:drbg_hmac_generate FIPS in Error!!!\n");
+                                len = -EACCES;
+                                goto out;
+                        }
+#endif
 			drbg_add_buf(src, drbg_statelen(drbg), &prefix, 1);
 			continue;
 		}
@@ -1364,7 +1425,8 @@ static int drbg_generate(struct drbg_state *drbg,
 	 * changing the state here.
 	 */
 	if (!drbg->test_data) {
-		now.cycles = random_get_entropy();
+		//now.cycles = random_get_entropy();
+		now.cycles = get_cycles();
 		drbg_string_fill(&timestamp, now.char_cycles, sizeof(cycles_t));
 		list_add_tail(&timestamp.list, &addtllist);
 	}
