diff --git a/crypto/ahash.c b/crypto/ahash.c
index 647aa1e65799..63ecebea53a2 100644
--- a/crypto/ahash.c
+++ b/crypto/ahash.c
@@ -85,6 +85,11 @@ int crypto_hash_walk_done(struct crypto_hash_walk *walk, int err)
 {
 	unsigned int alignmask = walk->alignmask;
 
+#ifdef CONFIG_CRYPTO_FIPS
+	if (unlikely(in_fips_err()))
+		return -EACCES;
+#endif
+
 	walk->data -= walk->offset;
 
 	if (walk->entrylen && (walk->offset & alignmask) && !err) {
@@ -132,6 +137,12 @@ EXPORT_SYMBOL_GPL(crypto_hash_walk_done);
 int crypto_hash_walk_first(struct ahash_request *req,
 			   struct crypto_hash_walk *walk)
 {
+
+#ifdef CONFIG_CRYPTO_FIPS
+	if (unlikely(in_fips_err()))
+		return -EACCES;
+#endif
+
 	walk->total = req->nbytes;
 
 	if (!walk->total) {
@@ -172,6 +183,11 @@ int crypto_hash_walk_first_compat(struct hash_desc *hdesc,
 				  struct crypto_hash_walk *walk,
 				  struct scatterlist *sg, unsigned int len)
 {
+#ifdef CONFIG_CRYPTO_FIPS
+	if (unlikely(in_fips_err()))
+		return -EACCES;
+#endif
+
 	walk->total = len;
 
 	if (!walk->total) {
@@ -367,6 +383,11 @@ static int crypto_ahash_op(struct ahash_request *req,
 	struct crypto_ahash *tfm = crypto_ahash_reqtfm(req);
 	unsigned long alignmask = crypto_ahash_alignmask(tfm);
 
+#ifdef CONFIG_CRYPTO_FIPS
+	if (unlikely(in_fips_err()))
+		return -EACCES;
+#endif
+
 	if ((unsigned long)req->result & alignmask)
 		return ahash_op_unaligned(req, op);
 
@@ -428,6 +449,8 @@ static void ahash_def_finup_done1(struct crypto_async_request *req, int err)
 	if (err == -EINPROGRESS) {
 		ahash_notify_einprogress(areq);
 		return;
+			ahash_notify_einprogress(areq);
+			return;
 	}
 
 	areq->base.flags &= ~CRYPTO_TFM_REQ_MAY_SLEEP;
@@ -435,6 +458,7 @@ static void ahash_def_finup_done1(struct crypto_async_request *req, int err)
 	err = ahash_def_finup_finish1(areq, err);
 	if (areq->priv)
 		return;
+			return;
 
 	areq->base.complete(&areq->base, err);
 }
@@ -472,6 +496,11 @@ static int crypto_ahash_init_tfm(struct crypto_tfm *tfm)
 	struct crypto_ahash *hash = __crypto_ahash_cast(tfm);
 	struct ahash_alg *alg = crypto_ahash_alg(hash);
 
+#ifdef CONFIG_CRYPTO_FIPS
+	if (unlikely(in_fips_err()))
+		return -EACCES;
+#endif
+
 	hash->setkey = ahash_nosetkey;
 	hash->has_setkey = false;
 	hash->export = ahash_no_export;
@@ -604,6 +633,11 @@ int ahash_register_instance(struct crypto_template *tmpl,
 {
 	int err;
 
+#ifdef CONFIG_CRYPTO_FIPS
+	if (unlikely(in_fips_err()))
+		return -EACCES;
+#endif
+
 	err = ahash_prepare_alg(&inst->alg);
 	if (err)
 		return err;
