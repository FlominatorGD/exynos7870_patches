diff --git a/include/trace/events/f2fs.h b/include/trace/events/f2fs.h
index 58f5be068ecd..4a089373838d 100644
--- a/include/trace/events/f2fs.h
+++ b/include/trace/events/f2fs.h
@@ -104,17 +104,6 @@
 		{ CP_SPEC_LOG_NUM,	"log type is 2" },		\
 		{ CP_RECOVER_DIR,	"dir needs recovery" })
 
-#define show_shutdown_mode(type)					\
-	__print_symbolic(type,						\
-		{ F2FS_GOING_DOWN_FULLSYNC,	"full sync" },		\
-		{ F2FS_GOING_DOWN_METASYNC,	"meta sync" },		\
-		{ F2FS_GOING_DOWN_NOSYNC,	"no sync" },		\
-		{ F2FS_GOING_DOWN_METAFLUSH,	"meta flush" },		\
-		{ F2FS_GOING_DOWN_NEED_FSCK,	"need fsck" })
-
-struct f2fs_sb_info;
-struct f2fs_io_info;
-struct extent_info;
 struct victim_sel_policy;
 struct f2fs_map_blocks;
 
@@ -488,37 +477,6 @@ TRACE_EVENT(f2fs_truncate_partial_nodes,
 		__entry->err)
 );
 
-TRACE_EVENT(f2fs_file_write_iter,
-
-	TP_PROTO(struct inode *inode, unsigned long offset,
-		unsigned long length, int ret),
-
-	TP_ARGS(inode, offset, length, ret),
-
-	TP_STRUCT__entry(
-		__field(dev_t,	dev)
-		__field(ino_t,	ino)
-		__field(unsigned long, offset)
-		__field(unsigned long, length)
-		__field(int,	ret)
-	),
-
-	TP_fast_assign(
-		__entry->dev	= inode->i_sb->s_dev;
-		__entry->ino	= inode->i_ino;
-		__entry->offset	= offset;
-		__entry->length	= length;
-		__entry->ret	= ret;
-	),
-
-	TP_printk("dev = (%d,%d), ino = %lu, "
-		"offset = %lu, length = %lu, written(err) = %d",
-		show_dev_ino(__entry),
-		__entry->offset,
-		__entry->length,
-		__entry->ret)
-);
-
 TRACE_EVENT(f2fs_map_blocks,
 	TP_PROTO(struct inode *inode, struct f2fs_map_blocks *map, int ret),
 
@@ -530,8 +488,6 @@ TRACE_EVENT(f2fs_map_blocks,
 		__field(block_t,	m_lblk)
 		__field(block_t,	m_pblk)
 		__field(unsigned int,	m_len)
-		__field(unsigned int,	m_flags)
-		__field(int,	m_seg_type)
 		__field(int,	ret)
 	),
 
@@ -541,20 +497,15 @@ TRACE_EVENT(f2fs_map_blocks,
 		__entry->m_lblk		= map->m_lblk;
 		__entry->m_pblk		= map->m_pblk;
 		__entry->m_len		= map->m_len;
-		__entry->m_flags	= map->m_flags;
-		__entry->m_seg_type	= map->m_seg_type;
 		__entry->ret		= ret;
 	),
 
 	TP_printk("dev = (%d,%d), ino = %lu, file offset = %llu, "
-		"start blkaddr = 0x%llx, len = 0x%llx, flags = %u,"
-		"seg_type = %d, err = %d",
+		"start blkaddr = 0x%llx, len = 0x%llx, err = %d",
 		show_dev_ino(__entry),
 		(unsigned long long)__entry->m_lblk,
 		(unsigned long long)__entry->m_pblk,
 		(unsigned long long)__entry->m_len,
-		__entry->m_flags,
-		__entry->m_seg_type,
 		__entry->ret)
 );
 
@@ -976,8 +927,8 @@ DECLARE_EVENT_CLASS(f2fs__submit_page_bio,
 	),
 
 	TP_fast_assign(
-		__entry->dev		= page_file_mapping(page)->host->i_sb->s_dev;
-		__entry->ino		= page_file_mapping(page)->host->i_ino;
+		__entry->dev		= page->mapping->host->i_sb->s_dev;
+		__entry->ino		= page->mapping->host->i_ino;
 		__entry->index		= page->index;
 		__entry->old_blkaddr	= fio->old_blkaddr;
 		__entry->new_blkaddr	= fio->new_blkaddr;
@@ -1164,11 +1115,10 @@ DECLARE_EVENT_CLASS(f2fs__page,
 	),
 
 	TP_fast_assign(
-		__entry->dev	= page_file_mapping(page)->host->i_sb->s_dev;
-		__entry->ino	= page_file_mapping(page)->host->i_ino;
+		__entry->dev	= page->mapping->host->i_sb->s_dev;
+		__entry->ino	= page->mapping->host->i_ino;
 		__entry->type	= type;
-		__entry->dir	=
-			S_ISDIR(page_file_mapping(page)->host->i_mode);
+		__entry->dir	= S_ISDIR(page->mapping->host->i_mode);
 		__entry->index	= page->index;
 		__entry->dirty	= PageDirty(page);
 		__entry->uptodate = PageUptodate(page);
@@ -1233,32 +1183,6 @@ DEFINE_EVENT(f2fs__page, f2fs_commit_inmem_page,
 	TP_ARGS(page, type)
 );
 
-TRACE_EVENT(f2fs_filemap_fault,
-
-	TP_PROTO(struct inode *inode, pgoff_t index, unsigned long ret),
-
-	TP_ARGS(inode, index, ret),
-
-	TP_STRUCT__entry(
-		__field(dev_t,	dev)
-		__field(ino_t,	ino)
-		__field(pgoff_t, index)
-		__field(unsigned long, ret)
-	),
-
-	TP_fast_assign(
-		__entry->dev	= inode->i_sb->s_dev;
-		__entry->ino	= inode->i_ino;
-		__entry->index	= index;
-		__entry->ret	= ret;
-	),
-
-	TP_printk("dev = (%d,%d), ino = %lu, index = %lu, ret = %lx",
-		show_dev_ino(__entry),
-		(unsigned long)__entry->index,
-		__entry->ret)
-);
-
 TRACE_EVENT(f2fs_writepages,
 
 	TP_PROTO(struct inode *inode, struct writeback_control *wbc, int type),
@@ -1643,30 +1567,6 @@ DEFINE_EVENT(f2fs_sync_dirty_inodes, f2fs_sync_dirty_inodes_exit,
 	TP_ARGS(sb, type, count)
 );
 
-TRACE_EVENT(f2fs_shutdown,
-
-	TP_PROTO(struct f2fs_sb_info *sbi, unsigned int mode, int ret),
-
-	TP_ARGS(sbi, mode, ret),
-
-	TP_STRUCT__entry(
-		__field(dev_t,	dev)
-		__field(unsigned int, mode)
-		__field(int, ret)
-	),
-
-	TP_fast_assign(
-		__entry->dev = sbi->sb->s_dev;
-		__entry->mode = mode;
-		__entry->ret = ret;
-	),
-
-	TP_printk("dev = (%d,%d), mode: %s, ret:%d",
-		show_dev(__entry->dev),
-		show_shutdown_mode(__entry->mode),
-		__entry->ret)
-);
-
 #endif /* _TRACE_F2FS_H */
 
  /* This part must be outside protection */
