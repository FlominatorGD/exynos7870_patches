diff --git a/include/media/videobuf2-core.h b/include/media/videobuf2-core.h
index 6ef2d01197da..6f1a3918e0e9 100644
--- a/include/media/videobuf2-core.h
+++ b/include/media/videobuf2-core.h
@@ -18,6 +18,8 @@
 #include <linux/videodev2.h>
 #include <linux/dma-buf.h>
 
+#include "../../drivers/staging/android/sw_sync.h"
+
 struct vb2_alloc_ctx;
 struct vb2_fileio_data;
 struct vb2_threadio_data;
@@ -182,6 +184,8 @@ struct vb2_queue;
  * @vb2_queue:		the queue to which this driver belongs
  * @num_planes:		number of planes in the buffer
  *			on an internal driver queue
+ * @acquire_fence:	sync fence that will be signaled when the buffer's
+ *			contents are available.
  * @state:		current buffer state; do not change
  * @queued_entry:	entry on the queued buffers list, which holds all
  *			buffers queued from userspace
@@ -197,6 +201,8 @@ struct vb2_buffer {
 
 	unsigned int		num_planes;
 
+	struct sync_fence	*acquire_fence;
+
 /* Private: internal use only */
 	enum vb2_buffer_state	state;
 
@@ -386,6 +392,9 @@ struct v4l2_fh;
  *		called since poll() needs to return POLLERR in that situation.
  * @fileio:	file io emulator internal data, used only if emulator is active
  * @threadio:	thread io internal data, used only if thread is active
+ * @timeline:	monotonic timeline of Android sync that signals the release
+ *		fences
+ * @timeline_max: the timestamp of the most recent release fence
  */
 struct vb2_queue {
 	enum v4l2_buf_type		type;
@@ -427,6 +436,9 @@ struct vb2_queue {
 	struct vb2_fileio_data		*fileio;
 	struct vb2_threadio_data	*threadio;
 
+	struct sw_sync_timeline		*timeline;
+	u32				timeline_max;
+
 #ifdef CONFIG_VIDEO_ADV_DEBUG
 	/*
 	 * Counters for how often these queue-related ops are
