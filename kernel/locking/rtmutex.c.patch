diff --git a/kernel/locking/rtmutex.c b/kernel/locking/rtmutex.c
index 1c8317caf88b..1a3845ae7abc 100644
--- a/kernel/locking/rtmutex.c
+++ b/kernel/locking/rtmutex.c
@@ -329,17 +329,15 @@ struct task_struct *rt_mutex_get_top_task(struct task_struct *task)
 }
 
 /*
- * Called by sched_setscheduler() to get the priority which will be
- * effective after the change.
+ * Called by sched_setscheduler() to check whether the priority change
+ * is overruled by a possible priority boosting.
  */
-int rt_mutex_get_effective_prio(struct task_struct *task, int newprio)
+int rt_mutex_check_prio(struct task_struct *task, int newprio)
 {
 	if (!task_has_pi_waiters(task))
-		return newprio;
+		return 0;
 
-	if (task_top_pi_waiter(task)->task->prio <= newprio)
-		return task_top_pi_waiter(task)->task->prio;
-	return newprio;
+	return task_top_pi_waiter(task)->task->prio <= newprio;
 }
 
 /*
