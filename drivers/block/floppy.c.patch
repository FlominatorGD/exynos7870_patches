diff --git a/drivers/block/floppy.c b/drivers/block/floppy.c
index be7eee1f54a8..a82d51cb358b 100644
--- a/drivers/block/floppy.c
+++ b/drivers/block/floppy.c
@@ -3389,6 +3389,8 @@ static int fd_getgeo(struct block_device *bdev, struct hd_geometry *geo)
 	return 0;
 }
 
+<<<<<<< HEAD
+=======
 static bool valid_floppy_drive_params(const short autodetect[8],
 		int native_format)
 {
@@ -3407,6 +3409,7 @@ static bool valid_floppy_drive_params(const short autodetect[8],
 	return true;
 }
 
+>>>>>>> fa6d9c340bb4 (floppy: fix invalid pointer dereference in drive_name)
 static int fd_locked_ioctl(struct block_device *bdev, fmode_t mode, unsigned int cmd,
 		    unsigned long param)
 {
@@ -3533,9 +3536,12 @@ static int fd_locked_ioctl(struct block_device *bdev, fmode_t mode, unsigned int
 		SUPBOUND(size, strlen((const char *)outparam) + 1);
 		break;
 	case FDSETDRVPRM:
+<<<<<<< HEAD
+=======
 		if (!valid_floppy_drive_params(inparam.dp.autodetect,
 				inparam.dp.native_format))
 			return -EINVAL;
+>>>>>>> fa6d9c340bb4 (floppy: fix invalid pointer dereference in drive_name)
 		*UDP = inparam.dp;
 		break;
 	case FDGETDRVPRM:
@@ -3733,8 +3739,11 @@ static int compat_setdrvprm(int drive,
 		return -EPERM;
 	if (copy_from_user(&v, arg, sizeof(struct compat_floppy_drive_params)))
 		return -EFAULT;
+<<<<<<< HEAD
+=======
 	if (!valid_floppy_drive_params(v.autodetect, v.native_format))
 		return -EINVAL;
+>>>>>>> fa6d9c340bb4 (floppy: fix invalid pointer dereference in drive_name)
 	mutex_lock(&floppy_mutex);
 	UDP->cmos = v.cmos;
 	UDP->max_dtr = v.max_dtr;
