diff --git a/drivers/usb/gadget/function/f_audio_source.c b/drivers/usb/gadget/function/f_audio_source.c
index bcd817439dbf..db936ce84786 100644
--- a/drivers/usb/gadget/function/f_audio_source.c
+++ b/drivers/usb/gadget/function/f_audio_source.c
@@ -295,6 +295,7 @@ static struct config_item_type audio_source_func_type = {
 	.ct_owner       = THIS_MODULE,
 };
 
+#if 0
 static ssize_t audio_source_pcm_show(struct device *dev,
 		struct device_attribute *attr, char *buf);
 
@@ -304,7 +305,7 @@ static struct device_attribute *audio_source_function_attributes[] = {
 	&dev_attr_pcm,
 	NULL
 };
-
+#endif
 /*--------------------------------------------------------------------------*/
 
 static struct usb_request *audio_request_new(struct usb_ep *ep, int buffer_size)
@@ -977,6 +978,7 @@ static void audio_source_free_inst(struct usb_function_instance *fi)
 	kfree(fi_audio->config);
 }
 
+#if 0
 static ssize_t audio_source_pcm_show(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
@@ -986,6 +988,7 @@ static ssize_t audio_source_pcm_show(struct device *dev,
 	/* print PCM card and device numbers */
 	return sprintf(buf, "%d %d\n", config->card, config->device);
 }
+#endif
 
 struct device *create_function_device(char *name);
 
@@ -1014,7 +1017,7 @@ static struct usb_function_instance *audio_source_alloc_inst(void)
 
 	config_group_init_type_name(&fi_audio->func_inst.group, "",
 						&audio_source_func_type);
-	dev = create_function_device("f_audio_source");
+//	dev = create_function_device("f_audio_source");
 
 	if (IS_ERR(dev)) {
 		err_ptr = dev;
@@ -1025,7 +1028,7 @@ static struct usb_function_instance *audio_source_alloc_inst(void)
 	fi_audio->config->device = -1;
 	fi_audio->audio_device = dev;
 
-	attrs = audio_source_function_attributes;
+//	attrs = audio_source_function_attributes;
 	if (attrs) {
 		while ((attr = *attrs++) && !err)
 			err = device_create_file(dev, attr);
