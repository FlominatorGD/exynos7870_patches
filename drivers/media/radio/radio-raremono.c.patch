diff --git a/drivers/media/radio/radio-raremono.c b/drivers/media/radio/radio-raremono.c
index 10958bac0ad9..bfb3a6d051ba 100644
--- a/drivers/media/radio/radio-raremono.c
+++ b/drivers/media/radio/radio-raremono.c
@@ -283,14 +283,6 @@ static int vidioc_g_frequency(struct file *file, void *priv,
 	return 0;
 }
 
-static void raremono_device_release(struct v4l2_device *v4l2_dev)
-{
-	struct raremono_device *radio = to_raremono_dev(v4l2_dev);
-
-	kfree(radio->buffer);
-	kfree(radio);
-}
-
 /* File system interface */
 static const struct v4l2_file_operations usb_raremono_fops = {
 	.owner		= THIS_MODULE,
@@ -315,14 +307,12 @@ static int usb_raremono_probe(struct usb_interface *intf,
 	struct raremono_device *radio;
 	int retval = 0;
 
-	radio = kzalloc(sizeof(*radio), GFP_KERNEL);
-	if (!radio)
-		return -ENOMEM;
-	radio->buffer = kmalloc(BUFFER_LENGTH, GFP_KERNEL);
-	if (!radio->buffer) {
-		kfree(radio);
+	radio = devm_kzalloc(&intf->dev, sizeof(struct raremono_device), GFP_KERNEL);
+	if (radio)
+		radio->buffer = devm_kmalloc(&intf->dev, BUFFER_LENGTH, GFP_KERNEL);
+
+	if (!radio || !radio->buffer)
 		return -ENOMEM;
-	}
 
 	radio->usbdev = interface_to_usbdev(intf);
 	radio->intf = intf;
@@ -346,8 +336,7 @@ static int usb_raremono_probe(struct usb_interface *intf,
 	if (retval != 3 ||
 	    (get_unaligned_be16(&radio->buffer[1]) & 0xfff) == 0x0242) {
 		dev_info(&intf->dev, "this is not Thanko's Raremono.\n");
-		retval = -ENODEV;
-		goto free_mem;
+		return -ENODEV;
 	}
 
 	dev_info(&intf->dev, "Thanko's Raremono connected: (%04X:%04X)\n",
@@ -356,7 +345,7 @@ static int usb_raremono_probe(struct usb_interface *intf,
 	retval = v4l2_device_register(&intf->dev, &radio->v4l2_dev);
 	if (retval < 0) {
 		dev_err(&intf->dev, "couldn't register v4l2_device\n");
-		goto free_mem;
+		return retval;
 	}
 
 	mutex_init(&radio->lock);
@@ -368,7 +357,6 @@ static int usb_raremono_probe(struct usb_interface *intf,
 	radio->vdev.ioctl_ops = &usb_raremono_ioctl_ops;
 	radio->vdev.lock = &radio->lock;
 	radio->vdev.release = video_device_release_empty;
-	radio->v4l2_dev.release = raremono_device_release;
 
 	usb_set_intfdata(intf, &radio->v4l2_dev);
 
@@ -384,10 +372,6 @@ static int usb_raremono_probe(struct usb_interface *intf,
 	}
 	dev_err(&intf->dev, "could not register video device\n");
 	v4l2_device_unregister(&radio->v4l2_dev);
-
-free_mem:
-	kfree(radio->buffer);
-	kfree(radio);
 	return retval;
 }
 
