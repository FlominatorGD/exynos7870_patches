diff --git a/drivers/base/regmap/regmap-i2c.c b/drivers/base/regmap/regmap-i2c.c
index 053150a7f9f2..3393d8f888c1 100644
--- a/drivers/base/regmap/regmap-i2c.c
+++ b/drivers/base/regmap/regmap-i2c.c
@@ -145,23 +145,41 @@ static int regmap_i2c_read(void *context,
 	struct i2c_msg xfer[2];
 	int ret;
 
-	xfer[0].addr = i2c->addr;
-	xfer[0].flags = 0;
-	xfer[0].len = reg_size;
-	xfer[0].buf = (void *)reg;
-
-	xfer[1].addr = i2c->addr;
-	xfer[1].flags = I2C_M_RD;
-	xfer[1].len = val_size;
-	xfer[1].buf = val;
-
-	ret = i2c_transfer(i2c->adapter, xfer, 2);
-	if (ret == 2)
-		return 0;
-	else if (ret < 0)
-		return ret;
-	else
-		return -EIO;
+	if (i2c->flags & I2C_CLIENT_TEN) {
+		xfer[0].flags = I2C_M_RD|I2C_CLIENT_TEN;
+		xfer[0].len = val_size;
+		xfer[0].buf = (void *)reg;
+		xfer[0].addr = xfer[0].buf[0] +
+			(((i2c->addr & 0x7f) << 8) & 0xff00);
+		xfer[0].buf = val;
+
+		ret = i2c_transfer(i2c->adapter, xfer, 1);
+
+		if (ret == 1)
+			return 0;
+		else if (ret < 0)
+			return ret;
+		else
+			return -EIO;
+	} else {
+		xfer[0].addr = i2c->addr;
+		xfer[0].flags = 0;
+		xfer[0].len = reg_size;
+		xfer[0].buf = (void *)reg;
+
+		xfer[1].addr = i2c->addr;
+		xfer[1].flags = I2C_M_RD;
+		xfer[1].len = val_size;
+		xfer[1].buf = val;
+
+		ret = i2c_transfer(i2c->adapter, xfer, 2);
+		if (ret == 2)
+			return 0;
+		else if (ret < 0)
+			return ret;
+		else
+			return -EIO;
+	}
 }
 
 static struct regmap_bus regmap_i2c = {
