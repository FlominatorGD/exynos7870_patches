diff --git a/drivers/char/mem.c b/drivers/char/mem.c
index bc9fd1253d77..c385fc6ac9cc 100644
--- a/drivers/char/mem.c
+++ b/drivers/char/mem.c
@@ -28,6 +28,14 @@
 #include <linux/io.h>
 #include <linux/aio.h>
 
+#ifdef CONFIG_KNOX_KAP
+#include <linux/knox_kap.h>
+#endif
+
+#ifdef CONFIG_MST_LDO
+#include <linux/mst_ctrl.h>
+#endif
+
 #include <asm/uaccess.h>
 
 #ifdef CONFIG_IA64
@@ -99,13 +107,6 @@ void __weak unxlate_dev_mem_ptr(unsigned long phys, void *addr)
 {
 }
 
-static inline bool should_stop_iteration(void)
-{
-	if (need_resched())
-		cond_resched();
-	return fatal_signal_pending(current);
-}
-
 /*
  * This funcion reads the *physical* memory. The f_pos points directly to the
  * memory location.
@@ -172,8 +173,6 @@ static ssize_t read_mem(struct file *file, char __user *buf,
 		p += sz;
 		count -= sz;
 		read += sz;
-		if (should_stop_iteration())
-			break;
 	}
 
 	*ppos += read;
@@ -245,8 +244,6 @@ static ssize_t write_mem(struct file *file, const char __user *buf,
 		p += sz;
 		count -= sz;
 		written += sz;
-		if (should_stop_iteration())
-			break;
 	}
 
 	*ppos += written;
@@ -454,10 +451,6 @@ static ssize_t read_kmem(struct file *file, char __user *buf,
 			read += sz;
 			low_count -= sz;
 			count -= sz;
-			if (should_stop_iteration()) {
-				count = 0;
-				break;
-			}
 		}
 	}
 
@@ -482,8 +475,6 @@ static ssize_t read_kmem(struct file *file, char __user *buf,
 			buf += sz;
 			read += sz;
 			p += sz;
-			if (should_stop_iteration())
-				break;
 		}
 		free_page((unsigned long)kbuf);
 	}
@@ -534,8 +525,6 @@ static ssize_t do_write_kmem(unsigned long p, const char __user *buf,
 		p += sz;
 		count -= sz;
 		written += sz;
-		if (should_stop_iteration())
-			break;
 	}
 
 	*ppos += written;
@@ -587,8 +576,6 @@ static ssize_t write_kmem(struct file *file, const char __user *buf,
 			buf += sz;
 			virtr += sz;
 			p += sz;
-			if (should_stop_iteration())
-				break;
 		}
 		free_page((unsigned long)kbuf);
 	}
@@ -862,6 +849,12 @@ static const struct memdev {
 #ifdef CONFIG_PRINTK
 	[11] = { "kmsg", 0644, &kmsg_fops, NULL },
 #endif
+#ifdef CONFIG_KNOX_KAP
+	[13] = { "knox_kap", 0664, &knox_kap_fops, NULL },
+#endif
+#ifdef CONFIG_MST_LDO
+	[14] = { "mst_ctrl", 0666, &mst_ctrl_fops, NULL },
+#endif
 };
 
 static int memory_open(struct inode *inode, struct file *filp)
