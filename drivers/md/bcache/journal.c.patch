diff --git a/drivers/md/bcache/journal.c b/drivers/md/bcache/journal.c
index 6b022773c168..32c26fa2f4f6 100644
--- a/drivers/md/bcache/journal.c
+++ b/drivers/md/bcache/journal.c
@@ -309,18 +309,6 @@ void bch_journal_mark(struct cache_set *c, struct list_head *list)
 	}
 }
 
-bool is_discard_enabled(struct cache_set *s)
-{
-	struct cache *ca;
-	unsigned int i;
-
-	for_each_cache(ca, s, i)
-		if (ca->discard)
-			return true;
-
-	return false;
-}
-
 int bch_journal_replay(struct cache_set *s, struct list_head *list)
 {
 	int ret = 0, keys = 0, entries = 0;
@@ -334,17 +322,9 @@ int bch_journal_replay(struct cache_set *s, struct list_head *list)
 	list_for_each_entry(i, list, list) {
 		BUG_ON(i->pin && atomic_read(i->pin) != 1);
 
-		if (n != i->j.seq) {
-			if (n == start && is_discard_enabled(s))
-				pr_info("bcache: journal entries %llu-%llu may be discarded! (replaying %llu-%llu)",
-					n, i->j.seq - 1, start, end);
-			else {
-				pr_err("bcache: journal entries %llu-%llu missing! (replaying %llu-%llu)",
-					n, i->j.seq - 1, start, end);
-				ret = -EIO;
-				goto err;
-			}
-		}
+		cache_set_err_on(n != i->j.seq, s,
+"bcache: journal entries %llu-%llu missing! (replaying %llu-%llu)",
+				 n, i->j.seq - 1, start, end);
 
 		for (k = i->j.start;
 		     k < bset_bkey_last(&i->j);
